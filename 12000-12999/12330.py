'''
문제 : 가장 가운데부터 1cm 간격으로 흰색, 검은색, 흰색, 검은색 ...
의 형태로 반복되도록 원판 형태로 칠하려 한다. 흰색인 부분은 칠하지 않고
검은색 부분만 칠하려 한다. 페인트 1밀리리터로 πcm^2을 칠할 수 있다고 하면,
가운데 원의 반지름이 R(R <= 10^18)cm이고 페인트가 T(T <= 2 * 10^18)밀리리터 있을 때
검은색 원판을 최대 몇 개 칠할 수 있는지 구한다.

해결 방법 : 최솟값과 최댓값을 0과 매우 큰 수(최소 10억 이상)로 둔 다음,
원판을 N개 칠했을 때의 페인트 사용량을 이용해 파라메트릭 탐색을 하면 된다.
원판을 N개 칠했을 때의 페인트 사용량은 등차수열의 합을 이용해 구할 수 있다.

주요 알고리즘 : 수학, 파라메트릭

출처 : GCJ 2013_1A A2번
'''

def getpaint(r, n):
    return n * ((r * 2 + 1) + (n - 1) * 2)

t = int(input())
for i in range(t):
    r, p = input().split(' ')
    r = int(r)
    p = int(p)
    lo = 0
    hi = 1234567890
    while lo < hi:
        if(getpaint(r, (lo + hi + 1) // 2) <= p):
           lo = (lo + hi + 1) // 2
        else:
           hi = ((lo + hi + 1) // 2) - 1
    print("Case #" + str(i + 1) + ": " + str(lo))
